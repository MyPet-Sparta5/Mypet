name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Docker image
        run: docker build -t minhyuk0828/mypetdb:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push minhyuk0828/mypetdb:${{ github.sha }}

      - name: Deploy to EC2
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            # Install Docker Compose if not already installed
            if ! command -v docker-compose &> /dev/null
            then
                sudo curl -L "https://github.com/docker/compose/releases/download/2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Pull the Docker image
            docker pull minhyuk0828/mypetdb:${{ github.sha }}

            # Stop and remove any existing containers
            docker-compose down || true

            # Create docker-compose.yml file
            cat << EOF > docker-compose.yml
            version: '3.8'
            services:
              app:
                image: minhyuk0828/mypetdb:${{ github.sha }}
                ports:
                  - "8080:8080"
                environment:
                  - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/mypet
                  - SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }}
                  - SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}
                  - SPRING_REDIS_HOST=redis
                depends_on:
                  - mysql
                  - redis
            mysql:
              platform: linux/x86_64
              image: mysql:8.0               
              ports:
                - "3307:3306"
               environment:
                - MYSQL_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
                - MYSQL_DATABASE=mypet
              volumes:
                - mysql_data:/var/lib/mysql
            redis:
              image: redis:7.2
              ports:
                - "6379:6379"
              volumes:
                - redis_data:/data
            volumes:
              mysql_data:
              redis_data:
            EOF
            
            # Run Docker Compose
            docker-compose up -d